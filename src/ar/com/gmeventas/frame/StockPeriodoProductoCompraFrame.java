/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.gmeventas.frame;

import ar.com.gmeventas.entities.Compra;
import ar.com.gmeventas.entities.CompraStock;
import ar.com.gmeventas.entities.Producto;
import ar.com.gmeventas.main.MainFrame;
import ar.com.gmeventas.services.CompraService;
import ar.com.gmeventas.services.ProductoService;
import ar.com.gmeventas.util.UtilFrame;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mario
 */
public class StockPeriodoProductoCompraFrame extends javax.swing.JFrame {

    private List<Compra> renglones;
    private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    private DecimalFormat df = new DecimalFormat("#0");
    private DecimalFormat df2 = new DecimalFormat("#0.00");

    /**
     * Creates new form StockPeridoProductoCompraFrame
     */
    public StockPeriodoProductoCompraFrame() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(100, 100, 255));
        this.setLocationRelativeTo(null);
        limpiarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        volverBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        deTxt = new javax.swing.JTextField();
        alTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        buscarBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("CANTIDADES COMPRADAS DE PRODUCTOS ENTRE FECHAS");

        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Desde Fecha:");

        deTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        deTxt.setText("DESDE");
        deTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                deTxtKeyPressed(evt);
            }
        });

        alTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        alTxt.setText("HASTA");
        alTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                alTxtKeyPressed(evt);
            }
        });

        jLabel2.setText("Hasta Fecha:");

        buscarBtn.setText("Buscar");
        buscarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarBtnActionPerformed(evt);
            }
        });
        buscarBtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buscarBtnKeyPressed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ“DIGO", "DETALLE", "CANTIDAD", "GRV.UNIT.", "GRAVADO", "IMP.UNIT.", "IMPUESTO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setPreferredWidth(50);
            tabla.getColumnModel().getColumn(1).setPreferredWidth(270);
            tabla.getColumnModel().getColumn(2).setPreferredWidth(25);
            tabla.getColumnModel().getColumn(3).setPreferredWidth(50);
            tabla.getColumnModel().getColumn(4).setPreferredWidth(50);
            tabla.getColumnModel().getColumn(5).setPreferredWidth(50);
            tabla.getColumnModel().getColumn(6).setPreferredWidth(50);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 874, Short.MAX_VALUE)
                        .addComponent(volverBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(alTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buscarBtn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(deTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(alTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(volverBtn)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        volver();
    }//GEN-LAST:event_volverBtnActionPerformed

    private void buscarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarBtnActionPerformed
        buscar();
    }//GEN-LAST:event_buscarBtnActionPerformed

    private void deTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            String fe = deTxt.getText();
            int largo = fe.length();
            if (largo == 10) {
                alTxt.requestFocus();
            } else {
                if (largo > 10) {
                    JOptionPane.showMessageDialog(this, "ERROR EN LARGO DE FECHA");
                    return;
                }
            }
            fe = UtilFrame.fecha(fe);
            deTxt.setText(fe);
        }
    }//GEN-LAST:event_deTxtKeyPressed

    private void alTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_alTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            String fe = alTxt.getText();
            int largo = fe.length();
            if (largo == 10) {
                buscarBtn.requestFocus();
            } else {
                if (largo > 10) {
                    JOptionPane.showMessageDialog(this, "ERROR EN LARGO DE FECHA");
                    return;
                }
            }
            fe = UtilFrame.fecha(fe);
            alTxt.setText(fe);
        }
    }//GEN-LAST:event_alTxtKeyPressed

    private void buscarBtnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarBtnKeyPressed
        if (evt.getKeyCode() == 10) {
            buscar();
        }
    }//GEN-LAST:event_buscarBtnKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StockPeriodoProductoCompraFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StockPeriodoProductoCompraFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StockPeriodoProductoCompraFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StockPeriodoProductoCompraFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StockPeriodoProductoCompraFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alTxt;
    private javax.swing.JButton buscarBtn;
    private javax.swing.JTextField deTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void volver() {
        MainFrame mf = new MainFrame();
        mf.setVisible(true);
        this.dispose();
    }

    private void limpiarCampos() {
        deTxt.setText("");
        alTxt.setText("");
        UtilFrame.limpiarTabla(tabla);
    }

    private void buscar() {
        UtilFrame.limpiarTabla(tabla);
        renglones = null;
        Date de = new Date();
        Date al = new Date();
        try {
            de = sdf.parse(deTxt.getText());
            al = sdf.parse(alTxt.getText());
        } catch (ParseException ex) {
            Logger.getLogger(StockPeriodoProductoFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        renglones = null;
        try {
            renglones = new CompraService().getComprasEntreFechas(de, al);
        } catch (Exception ex) {
            Logger.getLogger(StockPeriodoProductoCompraFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (renglones != null && !renglones.isEmpty()) {
            List<CompraStock> renglonesStock = new ArrayList<>();
            for (Compra rf : renglones) {
                CompraStock rfs = new CompraStock();
                rfs.setCantidad(rf.getCantidad());
                rfs.setId(rf.getId());
                rfs.setCodigo(rf.getProducto().getCodigo());
                rfs.setDetalle(rf.getProducto().getDetalle());
                BigDecimal bd_impuesto = new BigDecimal(df2.format(rf.getProducto().getImpuesto()).replace(",", "."));
                BigDecimal bd_cantidad = new BigDecimal(df.format(rf.getCantidad()));
                BigDecimal bd_gravado = new BigDecimal(df2.format(rf.getProducto().getPrecio()).replace(",", "."));
                BigDecimal bd_t_imp = bd_impuesto.multiply(bd_cantidad);
                BigDecimal bd_t_grav = bd_gravado.multiply(bd_cantidad);
                rfs.setImpuesto(bd_t_imp.floatValue());
                rfs.setGravado(bd_t_grav.doubleValue());
                renglonesStock.add(rfs);
            }
            Collections.sort(renglonesStock);
            DefaultTableModel tbl = (DefaultTableModel) tabla.getModel();
            Float total = 0F;
            Integer cod = 0;
            String deta = "";
            Float t_impuesto = 0F;
            Double t_gravado = 0.0;
            BigDecimal bd_ttg = new BigDecimal("0.00");
            Double pu = 0.0;
            Float iu = 0F;
            int x = 2;
            for (CompraStock rf : renglonesStock) {
                if (x == 2) {
                    total = rf.getCantidad();
                    cod = rf.getCodigo();
                    deta = rf.getDetalle();
                    t_impuesto = rf.getImpuesto();

                    t_gravado = rf.getGravado();
                    Producto p = null;
                    try {
                        p = new ProductoService().getProductoByCodigo(cod);
                    } catch (Exception ex) {
                        Logger.getLogger(StockPeriodoProductoCompraFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (p != null) {
                        pu = p.getPrecio();
                        iu = p.getImpuesto();
                    } else {
                        pu = 0.0;
                        iu = 0F;
                    }
                    x = 1;
                } else {
                    if (cod.equals(rf.getCodigo())) {
                        total += rf.getCantidad();
                        t_impuesto += rf.getImpuesto();
                        t_gravado += rf.getGravado();
                    } else {
                        Object o[] = new Object[7];
                        o[0] = cod;
                        o[1] = deta;
                        o[2] = df.format(total);
                        o[3] = df2.format(pu);
                        o[4] = df2.format(t_gravado);
                        o[5] = df2.format(iu);
                        o[6] = df2.format(t_impuesto);
                        BigDecimal tii = new BigDecimal(df2.format(t_impuesto).replace(",", "."));
                        bd_ttg = bd_ttg.add(tii);
                        tbl.addRow(o);
                        cod = rf.getCodigo();
                        deta = rf.getDetalle();
                        total = rf.getCantidad();
                        t_impuesto = rf.getImpuesto();
                        t_gravado = rf.getGravado();
                        Producto p = null;
                        try {
                            p = new ProductoService().getProductoByCodigo(cod);
                        } catch (Exception ex) {
                            Logger.getLogger(StockPeriodoProductoCompraFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        if (p != null) {
                            pu = p.getPrecio();
                            iu = p.getImpuesto();
                        } else {
                            pu = 0.0;
                            iu = 0F;
                        }
                    }
                }
            }
            Object o[] = new Object[7];
            o[0] = cod;
            o[1] = deta;
            o[2] = df.format(total);
            o[3] = df2.format(pu);
            o[4] = df2.format(t_gravado);
            o[5] = df2.format(iu);
            o[6] = df2.format(t_impuesto);
            BigDecimal tii = new BigDecimal(df2.format(t_impuesto).replace(",", "."));
            bd_ttg = bd_ttg.add(tii);
            Object o1[] = new Object[7];
            o1[1] = "TOTAL >>>";
            o1[6] = df2.format(bd_ttg.doubleValue());
            tbl.addRow(o);
            tbl.addRow(o1);
            tabla.setModel(tbl);
        }
    }
}
